#!/usr/bin/env bash
# Copyright 2017-2020 by SDRausty. All rights reserved, see LICENSE 🌎 🌍 🌏
# Hosting sdrausty.github.io/TermuxArch courtesy https://pages.github.com.
# https://sdrausty.github.io/TermuxArch/README has info about this project.
# https://sdrausty.github.io/TermuxArch/CONTRIBUTORS Thank you for your help.
##############################################################################
# IFS=$'\n\t'
set -Eeuo pipefail
shopt -s nullglob globstar
unset LD_PRELOAD
VERSIONID=2.0.593
 
_TRPERR_() {  # run on script error
	local RV="$?"
	printf "\\e[?25h\\n\\e[1;48;5;138m %s\\e[0m\\n\\n" "TermuxArch WARNING:  Generated script signal ${RV:-unknown} near or at line number ${1:-unknown} by `${2:-command}`!"
	exit 201
}
 
_TRPET_() {  # run on exit
	local RV="$?" 
  	printf "" 
	 
	if [[ "$RV" = 0 ]]
	then
		printf "\\e[0;32m%s\\e[1;34m: \\e[1;32m%s\\e[0m\\n\\e[0m" "${0##*/} $@ 2.0.593" "DONE 🏁 "
		printf "\\e]2; %s: %s \007" "${0##*/} $@" "DONE 🏁 "
	else 
		printf "\\e[0;32m%s \\e[0m%s\\e[1;34m: \\e[1;32m%s\\e[0m\\n\\e[0m" "${0##*/} $@ 2.0.593" "[Exit Signal $RV]" "DONE  🏁 "
		printf "\033]2; %s: %s %s \007" "${0##*/} $@" "[Exit Signal $RV]" "DONE 🏁 "
	fi
	printf "\e[?25h\e[0m"
	set +Eeuo pipefail
	exit
}
 
_TRPSIG_() {  # run on signal
	printf "\\e[?25h\\e[1;7;38;5;0mTermuxArch WARNING:  Signal $? received!\\e[0m\\n"
 	exit 211
}
 
_TRPQ_() {  # run on quit
	printf "\\e[?25h\\e[1;7;38;5;0mTermuxArch WARNING:  Quit signal $? received!\\e[0m\\n"
 	exit 221
}
 
trap '_TRPERR_ $LINENO $BASH_COMMAND $?' ERR
trap _TRPET_ EXIT
trap _TRPSIG_ HUP INT TERM
trap _TRPQ_ QUIT
 
_PMFSESTRING_() {
printf "\\e[1;31m%s\\e[1;37m%s\\e[1;32m%s\\e[1;37m%s\\n\\n" "Signal generated in '$1' : Cannot complete task : " "Continuing..."
printf "\\e[1;34m%s\\e[0;34m%s\\e[1;34m%s\\e[0;34m%s\\e[1;34m%s\\e[0m\\n\\n" "  If you find improvements for " "setupTermuxArch" " and " "$0" " please open an issue and accompanying pull request."
}
printf "\\n\\e[1;32m==> \\e[1;0m%s\\e[0m\\n\\n" "Running ${0##*/} trim $@:"
if [[ "$UID" -eq "0" ]]
then
SUTRIM="pacman -Sc --noconfirm --color=always"
_SUTRIM_() {
pacman -Sc --noconfirm --color=always || _PMFSESTRING_ "pacman -Sc ${0##*/}"
}
else
SUTRIM="sudo pacman -Sc --noconfirm --color=always"
_SUTRIM_() {
sudo pacman -Sc --noconfirm --color=always || _PMFSESTRING_ "sudo pacman -Sc ${0##*/}"
}
fi
printf "%s\\n" "[1/5] rm -rf /boot/"
rm -rf /boot/
printf "%s\\n" "[2/5] rm -rf /usr/lib/firmware"
rm -rf /usr/lib/firmware
printf "%s\\n" "[3/5] rm -rf /usr/lib/modules"
rm -rf /usr/lib/modules
printf "%s\\n" "[4/5] $SUTRIM"
_SUTRIM_
printf "%s\\n" "[5/5] rm -f /var/cache/pacman/pkg/*xz"
rm -f /var/cache/pacman/pkg/*xz || _PMFSESTRING_ "rm -f ${0##*/}"
printf "\\n\\e[1;32m%s\\e[0m\\n\\n" "${0##*/} trim $@: Done"
# trim EOF
